diff --git a/res/drawable/switchbar_background.xml b/res/drawable/switchbar_background.xml
index a58f2e9f2f..090b5758ae 100644
--- a/res/drawable/switchbar_background.xml
+++ b/res/drawable/switchbar_background.xml
@@ -16,6 +16,6 @@
 
 <ripple xmlns:android="http://schemas.android.com/apk/res/android"
     android:color="?android:attr/colorControlHighlight">
-    <item android:drawable="?android:attr/colorSecondary" />
+    <item android:drawable="@color/black" />
 </ripple>
 
diff --git a/res/layout/storage_summary_donut.xml b/res/layout/storage_summary_donut.xml
index 8e11d71f36..96eb248d8f 100644
--- a/res/layout/storage_summary_donut.xml
+++ b/res/layout/storage_summary_donut.xml
@@ -17,7 +17,7 @@
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
-    android:background="?android:attr/colorSecondary"
+    android:background="#000000"
     android:gravity="center_vertical"
     android:orientation="horizontal" >
 
diff --git a/res/values/styles.xml b/res/values/styles.xml
index f3e16bffcd..4035973d7a 100644
--- a/res/values/styles.xml
+++ b/res/values/styles.xml
@@ -472,5 +472,4 @@
     <style name="TextAppearance.SearchBar" parent="@android:style/TextAppearance.Material.Widget.Toolbar.Subtitle">
         <item name="android:textSize">@dimen/search_bar_text_size</item>
     </style>
-
 </resources>
diff --git a/res/values/themes.xml b/res/values/themes.xml
index 2610e08825..9d079d6978 100644
--- a/res/values/themes.xml
+++ b/res/values/themes.xml
@@ -133,6 +133,11 @@
         <item name="android:layout">@layout/setup_preference</item>
     </style>
 
+    <style name="PreferenceStyle.pai" parent="Preference.Material">
+        <!-- Color palette -->
+        <item name="textColor">#FFFFFF</item>
+    </style>
+
     <!-- Accessibility portion of Setup Wizard -->
     <style name="SetupWizardAccessibilityTheme" parent="Theme.SettingsBase">
         <item name="android:windowLightStatusBar">false</item>
@@ -240,6 +245,7 @@
 
     <style name="ThemeOverlay.AlertDialog" parent="@android:style/ThemeOverlay.Material.Dialog.Alert">
         <item name="android:windowSoftInputMode">adjustResize</item>
+        <item name="android:textColor">#FFFFFF</item>
     </style>
 
     <style name="Theme.AlertDialog" parent="@*android:style/Theme.DeviceDefault.Settings.Dialog.Alert">
diff --git a/res/xml/system_dashboard_fragment.xml b/res/xml/system_dashboard_fragment.xml
index a71c75858c..277021a6ce 100644
--- a/res/xml/system_dashboard_fragment.xml
+++ b/res/xml/system_dashboard_fragment.xml
@@ -62,4 +62,11 @@
         android:order="-20"
         android:fragment="com.android.settings.system.ResetDashboardFragment" />
 
-</PreferenceScreen>
\ No newline at end of file
+    <com.android.settings.TimeoutListPreference
+	android:key="screen_timeout_system"
+        android:title="@string/screen_timeout"
+        android:summary="@string/summary_placeholder"
+        android:entries="@array/screen_timeout_entries"
+        android:entryValues="@array/screen_timeout_values" />
+
+</PreferenceScreen>
diff --git a/src/com/android/settings/SettingsActivity.java b/src/com/android/settings/SettingsActivity.java
index 06bdd0cad4..5098d88b05 100644
--- a/src/com/android/settings/SettingsActivity.java
+++ b/src/com/android/settings/SettingsActivity.java
@@ -848,9 +848,9 @@ public class SettingsActivity extends SettingsDrawerActivity
 
         somethingChanged = setTileEnabled(new ComponentName(packageName,
                         Settings.WifiDisplaySettingsActivity.class.getName()),
-                WifiDisplaySettings.isAvailable(this), isAdmin)
+                false, isAdmin)
                 || somethingChanged;
-
+ 
         if (UserHandle.MU_ENABLED && !isAdmin) {
 
             // When on restricted users, disable all extra categories (but only the settings ones).
diff --git a/src/com/android/settings/dashboard/DashboardFragment.java b/src/com/android/settings/dashboard/DashboardFragment.java
index 8c3ac0d026..ac975ca49f 100644
--- a/src/com/android/settings/dashboard/DashboardFragment.java
+++ b/src/com/android/settings/dashboard/DashboardFragment.java
@@ -250,13 +250,20 @@ public abstract class DashboardFragment extends SettingsPreferenceFragment
      */
     private void displayResourceTiles() {
         final int resId = getPreferenceScreenResId();
+	Log.d(TAG, "displayResourceTiles:resId = " + resId);
         if (resId <= 0) {
             return;
         }
         addPreferencesFromResource(resId);
         final PreferenceScreen screen = getPreferenceScreen();
+	if(screen == null) {
+	    Log.d(TAG, "screen is null");
+	} else {
+	    Log.d(TAG, "screen is not null");
+	}
         Collection<AbstractPreferenceController> controllers = mPreferenceControllers.values();
         for (AbstractPreferenceController controller : controllers) {
+            Log.d(TAG, (controller == null)? "controller is null": "controller is not null");
             controller.displayPreference(screen);
         }
     }
diff --git a/src/com/android/settings/display/TimeoutPreferenceController.java b/src/com/android/settings/display/TimeoutPreferenceController.java
index 6b282ef33b..e90e13f912 100644
--- a/src/com/android/settings/display/TimeoutPreferenceController.java
+++ b/src/com/android/settings/display/TimeoutPreferenceController.java
@@ -41,20 +41,24 @@ public class TimeoutPreferenceController extends AbstractPreferenceController im
     public TimeoutPreferenceController(Context context, String key) {
         super(context);
         mScreenTimeoutKey = key;
+	Log.d(TAG, "TimeoutPreferenceController :" + key);
     }
 
     @Override
     public boolean isAvailable() {
+	Log.d(TAG, "TimeoutPreferenceController :" + "isAvialble");
         return true;
     }
 
     @Override
     public String getPreferenceKey() {
+	Log.d(TAG, "TimeoutPreferenceController :" + "getPreferenceKey=>" + mScreenTimeoutKey);
         return mScreenTimeoutKey;
     }
 
     @Override
     public void updateState(Preference preference) {
+	Log.d(TAG, "TimeoutPreferenceController :" + "updateState");
         final TimeoutListPreference timeoutListPreference = (TimeoutListPreference) preference;
         final long currentTimeout = Settings.System.getLong(mContext.getContentResolver(),
                 SCREEN_OFF_TIMEOUT, FALLBACK_SCREEN_TIMEOUT_VALUE);
@@ -73,6 +77,7 @@ public class TimeoutPreferenceController extends AbstractPreferenceController im
 
     @Override
     public boolean onPreferenceChange(Preference preference, Object newValue) {
+	Log.d(TAG, "TimeoutPreferenceController :" + "onPreferenceChange");
         try {
             int value = Integer.parseInt((String) newValue);
             Settings.System.putInt(mContext.getContentResolver(), SCREEN_OFF_TIMEOUT, value);
diff --git a/src/com/android/settings/system/SystemDashboardFragment.java b/src/com/android/settings/system/SystemDashboardFragment.java
index 2485cceb44..09795cca9e 100644
--- a/src/com/android/settings/system/SystemDashboardFragment.java
+++ b/src/com/android/settings/system/SystemDashboardFragment.java
@@ -18,6 +18,7 @@ package com.android.settings.system;
 import android.content.Context;
 import android.os.UserManager;
 import android.provider.SearchIndexableResource;
+import android.util.Log;
 
 import com.android.internal.logging.nano.MetricsProto;
 import com.android.settings.R;
@@ -25,6 +26,7 @@ import com.android.settings.backup.BackupSettingsActivityPreferenceController;
 import com.android.settings.dashboard.DashboardFragment;
 import com.android.settings.deviceinfo.AdditionalSystemUpdatePreferenceController;
 import com.android.settings.deviceinfo.SystemUpdatePreferenceController;
+import com.android.settings.display.TimeoutPreferenceController;
 import com.android.settings.gestures.GesturesSettingPreferenceController;
 import com.android.settings.search.BaseSearchIndexProvider;
 import com.android.settings.search.Indexable;
@@ -39,6 +41,7 @@ public class SystemDashboardFragment extends DashboardFragment {
     private static final String TAG = "SystemDashboardFrag";
 
     private static final String KEY_RESET = "reset_dashboard";
+    private static final String KEY_SCREEN_TIMEOUT = "screen_timeout_system";
 
     @Override
     public int getMetricsCategory() {
@@ -71,6 +74,8 @@ public class SystemDashboardFragment extends DashboardFragment {
         controllers.add(new AdditionalSystemUpdatePreferenceController(context));
         controllers.add(new BackupSettingsActivityPreferenceController(context));
         controllers.add(new GesturesSettingPreferenceController(context));
+        controllers.add(new TimeoutPreferenceController(context, KEY_SCREEN_TIMEOUT));
+	Log.d(TAG, "buildPreferenceControllers:controllers.size = " + controllers.size());
         return controllers;
     }
 
